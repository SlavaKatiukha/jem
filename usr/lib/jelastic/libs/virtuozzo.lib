#!/bin/bash

# Copyright 2015 Jelastic, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



# this library requires bash version 4;
[ -n "${VIRTUOZZOLIB_VERSION:-}" ] && return 0;
VIRTUOZZOLIB_VERSION="0.1";

$PROGRAM 'vzctl';
$PROGRAM 'vzlist';
$PROGRAM 'grep';

# create a user container on HN
# params:
#       $1 - CTID
#       $2 - array with params
#       $3 - Template name (default centos-5)
function vzCreateContainer() {
    : ${1:?"missing CTID param"};
    local template="${3:-"centos-5"}" params=${2} ctid=${1};
    ${VZCTL} create ${ctid} --ostemplate "${template}-x86_64";
    [ -z "${params}" ] && vzSetParams $ctid $params;
    return ${?};
}

function vzIsContainerExists() {
    : ${1:?"Missing CTID param"};
    local ctid=$1
    vzlist -H1  $ctid &>/dev/null
    return $?
}


function isVMexist(){
    : ${1:?"Missing ENVID param"};
    local envid=$1
    prlctl list -H $envid &>/dev/null && return 0 || return 1
}

#
# readFileFromCtontainer
#
# ARGS:
#       CTID:integer - container CTID
#       File:string  - full path to file to read
# RESULT:
#       0 - if file readed successfully
#       1 - file read error
#       2 - CTID not found
# function return file content to stdout
function readFileFromCtontainer() {
    : ${1:?"Missing CTID param"};
    : ${2:?"Missing FILE param"};
    local CTID=$1 fileName=$2;
    vzIsContainerExists ${CTID} || { return 2; };
    cat "/vz/root/${CTID}/${filename}";
    return $?;
}

#
# isContainerRunning
#
# ARGS:
#       CTID:integer - container CTID
# RESULT:
#       0 - container status is running
#       1 - container is stopped,mounted,suspended
function isContainerRunning() {
    : ${1:?"Missing CTID param"};
    local CTID=$1
    out=$($VZLIST -Ho status $CTID)
    if [[ "x$out" != "xrunning" ]] ; then
        return 1
    fi
    return 0
}

function getCtPrivate(){
        : ${1:?"Missing CTID param"};
        local CTID=$1
        vzlist $CTID -Ho private 2>/dev/null
        return $?;
}

function getCtRoot(){
        : ${1:?"Missing CTID param"};
        local CTID=$1
        vzlist $CTID -Ho root 2>/dev/null
        return $?;
}


function getCtVeConf(){
    : ${1:?"Missing CTID param"};
    local CTID=$1
    local private=$(getCtPrivate $CTID)
    if [ ! -z $private -a -d $private ]
    then
        echo "${private}/ve.conf"
    else
        echo /vz/private/${CTID}/ve.conf
    fi
}

#
# isContainerMounted
#
# ARGS:
#       CTID:integer - container CTID
# RESULT:
#       0 - container status is mounted (either running or stopped/suspended but explicitly mounted)
#       1 - container is not mounted
function isContainerMounted() {
    : ${1:?"Missing CTID param"};
    local CTID=$1
    out=$($VZLIST -Ho status $CTID)
    [ "x$out" == "xmounted" -o "x$out" == "xrunning" ]
}

function isContainerMountedStopped() {
    : ${1:?"Missing CTID param"};
    local CTID=$1
    out=$($VZLIST -Ho status $CTID)
    [ "x$out" == "xmounted" ]
}

function isContainerLocked() {
    : ${1:?"Missing CTID param"}
    [ -e "/vz/lock/$1.lck" ]
}
